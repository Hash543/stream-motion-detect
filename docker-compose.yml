version: '3.8'

services:
  # PostgreSQL 資料庫
  db:
    image: postgres:15-alpine
    container_name: stream-monitor-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE:-motion-detector}
      - POSTGRES_USER=${POSTGRES_USER:-face-motion}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-kkk12345}
      - TZ=Asia/Taipei
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monitor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-face-motion} -d ${POSTGRES_DATABASE:-motion-detector}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  # API服務
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stream-monitor-api
    restart: unless-stopped
    ports:
      - "8282:8282"
    volumes:
      - ./config:/app/config
      - ./screenshots:/app/screenshots
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=${POSTGRES_DATABASE:-motion-detector}
      - POSTGRES_USER=${POSTGRES_USER:-face-motion}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-kkk12345}
      - SESSION_SECRET=${SESSION_SECRET:-your-secret-key-change-this}
      - LOG_LEVEL=INFO
      - TZ=Asia/Taipei
    networks:
      - monitor-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8282/api/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 監控服務 (處理影像串流和檢測)
  monitor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stream-monitor-service
    restart: unless-stopped
    command: python start_system.py
    volumes:
      - ./config:/app/config
      - ./screenshots:/app/screenshots
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=${POSTGRES_DATABASE:-motion-detector}
      - POSTGRES_USER=${POSTGRES_USER:-face-motion}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-kkk12345}
      - LOG_LEVEL=INFO
      - TZ=Asia/Taipei
      - AUTO_START=true
    networks:
      - monitor-network
    depends_on:
      - api
      - db
    # 如需使用GPU
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Nginx反向代理 (可選)
  nginx:
    image: nginx:alpine
    container_name: stream-monitor-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./screenshots:/app/screenshots:ro
    networks:
      - monitor-network
    depends_on:
      - api

networks:
  monitor-network:
    driver: bridge

volumes:
  screenshots:
  logs:
  data:
  models:
  postgres_data:
